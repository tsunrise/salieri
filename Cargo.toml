[package]
name = "salieri"
version = "0.0.0"
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
cfg-if = "0.1.2"
worker = "0.0.11"
serde_json = "1.0.67"
serde = "1"
toml = "0.7.3"
futures-core = "0.3"
futures-util = "0.3"
async-stream = "0.3"
rand = "0.8"
rand_xorshift = "0.3"
getrandom = { version = "0.2", features = ["js"] }
thiserror = "1.0"
chrono = { version = "0.4", features = ["wasmbind"], default-features = false }
js-sys = "0.3"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.1", optional = true }

uuid = {version = "1.3", features = ["v4","fast-rng","macro-diagnostics"]}
base64 = "0.21.2"
[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
